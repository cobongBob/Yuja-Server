buildscript {
 dependencies {
	 classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
 }
}

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.cobong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// Lombok
	implementation "org.projectlombok:lombok"
	annotationProcessor ("org.projectlombok:lombok")
	testImplementation ("org.projectlombok:lombok")
	testAnnotationProcessor ("org.projectlombok:lombok")

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	// jwt
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.15.0'
	
}

test {
	useJUnitPlatform()
}

//QueryDsl config
apply plugin: "com.ewerk.gradle.plugins.querydsl"

def querydslDir = 'src/main/generated'

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

//sourceSets {
// main {
// 	java {
//		srcDirs = ['src/main/java', querydslDir]
//		}
//	}
//}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
	

tasks.withType(JavaCompile) { 
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir) 
}

